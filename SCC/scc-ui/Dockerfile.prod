# pull the base image
FROM node:16.13.1 as build

# set the working direction
WORKDIR /app

# add `/app/node_modules/.bin` to $PATH
ENV PATH /app/node_modules/.bin:$PATH

# install app dependencies
COPY package.json ./

COPY package-lock.json ./

#COPY node_modules /app/

RUN npm install

# add app
COPY . ./

ARG REACT_APP_HOST
ARG REACT_APP_BASE_PATH
ARG REACT_APP_SERVER_BASE_PATH
ARG REACT_APP_ATTACK_NAVIGATOR_URL
ARG REACT_APP_NETWORK_DASHBOARD_URL
ARG REACT_APP_ENDPOINT_DASHBOARD_URL
ARG REACT_APP_MISP_URL
ARG REACT_APP_SO_ALERTS_URL
ARG REACT_APP_RISK_REPORT_URL
ARG REACT_APP_CONFIG_COMPLIANCE_REPORT_URL
ARG REACT_APP_VULNERABILITY_REPORT_URL
ARG REACT_APP_POLICY_MANAGER_API_SERVER
ARG REACT_APP_LOGIN_TIMEOUT

ENV REACT_APP_HOST=${REACT_APP_HOST}
ENV REACT_APP_BASE_PATH=${REACT_APP_BASE_PATH}
ENV REACT_APP_SERVER_BASE_PATH=${REACT_APP_SERVER_BASE_PATH}
ENV REACT_APP_ATTACK_NAVIGATOR_URL=${REACT_APP_ATTACK_NAVIGATOR_URL}
ENV REACT_APP_NETWORK_DASHBOARD_URL=${REACT_APP_NETWORK_DASHBOARD_URL}
ENV REACT_APP_ENDPOINT_DASHBOARD_URL=${REACT_APP_ENDPOINT_DASHBOARD_URL}
ENV REACT_APP_MISP_URL=${REACT_APP_MISP_URL}
ENV REACT_APP_SO_ALERTS_URL=${REACT_APP_SO_ALERTS_URL}
ENV REACT_APP_RISK_REPORT_URL=${REACT_APP_RISK_REPORT_URL}
ENV REACT_APP_CONFIG_COMPLIANCE_REPORT_URL=${REACT_APP_CONFIG_COMPLIANCE_REPORT_URL}
ENV REACT_APP_VULNERABILITY_REPORT_URL=${REACT_APP_VULNERABILITY_REPORT_URL}
ENV REACT_APP_POLICY_MANAGER_API_SERVER=${REACT_APP_POLICY_MANAGER_API_SERVER}
ENV REACT_APP_LOGIN_TIMEOUT=${REACT_APP_LOGIN_TIMEOUT}

# RUN CI=true npm test

RUN npm run build

FROM nginx:1.21.3

COPY --from=build /app/build /usr/share/nginx/html/scc

RUN rm /etc/nginx/conf.d/default.conf

COPY ./ssh/certificate.pem /etc/nginx/ssl/certificate.pem
COPY ./ssh/key.pem /etc/nginx/ssl/key.pem
COPY ./nginx.conf /etc/nginx/conf.d/scc-ui.conf

# Copy .env file and shell script to container
WORKDIR /usr/share/nginx/html
COPY ./env.sh .
COPY .env.prod .

# Add bash
# RUN apk add --no-cache bash

# Make our shell script executable
RUN chmod +x env.sh

# CMD ["nginx", "-g", "daemon off;"]
# Start Nginx server
CMD ["/bin/bash", "-c", "/usr/share/nginx/html/env.sh && nginx -g \"daemon off;\""]
# EXPOSE 443